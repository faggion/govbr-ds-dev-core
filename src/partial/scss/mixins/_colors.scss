/// Cria utilitário de cor de superfície.
///
/// Opcionalmente pode-se definir também a cor de leitura.
///
/// Caso o token de superfície esteja listado na variável `$theme-contrast-mode-on` será aplicado o **contrast mode** nas variáveis globais.
/// @group Cores
/// @param {String} $class-name - Nome usado para compor classe CSS
/// @param {String} $token-name - Token de superfície
/// @param {String} $read-token-name [null] - **Opcional!** Token de leitura
/// @example
///  @include surface-color("pure-0", "color-pure-0");
///  .bg-pure-0 {
///    background-color: var(--color-pure-0);
///  }
///
///  @include surface-color("main-base", "theme-surface-main-base", "theme-surface-read-main-base");
///  .bg-main-base {
///    background-color: var(--theme-surface-main-base);
///    color: var(--theme-surface-read-main-base);
///  }
///
///  // A superfície a seguir está na lista de $theme-contrast-mode-on
///  @include surface-color("contrast-base", "theme-surface-contrast-base", "theme-surface-read-contrast-base");
///  .bg-contrast-base {
///    --background: var(--theme-surface-contrast-base);
///    --background-alternative: var(--theme-surface-contrast-alternative);
///    --color: var(--theme-read-contrast-base);
///    --hover: var(--opacity-20);
///    --interactive: var(--theme-interactive-contrast);
///    --interactive-rgb: var(--theme-interactive-contrast-rgb);
///    --active: var(--theme-activated-contrast);
///    --active-read: var(--theme-activated-read-contrast);
///    background-color: var(--theme-surface-contrast-base);
///    color: var(--theme-surface-read-contrast-base);
///  }
@mixin surface-color($class-name, $token-name, $read-token-name: null) {
  .bg-#{$class-name} {
    @if index($theme-contrast-mode-on, $token-name) != null {
      @include contrast-mode;
    }
    background-color: var(--#{$token-name});
    @if $read-token-name != null {
      color: var(--#{$read-token-name});
    }
  }
}

/// Cria utilitário de cor de leitura.
/// @group Cores
/// @param {String} $class-name - Nome usado para compor classe CSS
/// @param {String} $token-name - Token de leitura
/// @example
///  @include read-color("pure-0", "color-pure-0");
///  .text-pure-0 {
///    color: var(--color-pure-0);
///  }
@mixin read-color($class-name, $token-name) {
  .text-#{$class-name} {
    color: var(--#{$token-name});
  }
}

/// Cria utilitário de cor de borda.
/// @group Cores
/// @param {String} $class-name - Nome usado para compor classe CSS
/// @param {String} $token-name - Token de borda
/// @example
///  @include border-color("pure-0", "color-pure-0");
///  .border-pure-0 {
///    border-color: var(--color-pure-0);
///  }
@mixin border-color($class-name, $token-name) {
  .border-#{$class-name} {
    border-color: var(--#{$token-name});
  }
}

/// Cria utilitários de superfície, leitura e borda para as cores.
///
/// Na configuração `$enable-lite: true;` são criados somente para a lista definida em `$colors-lite`, caso contrário são criados para todas as cores.
/// @group Cores
/// @example
///  @include utility-colors;
///  .bg-pure-0 {
///    background-color: var(--color-pure-0);
///  }
///  .text-pure-0 {
///    color: var(--color-pure-0);
///  }
///  .border-pure-0 {
///    border-color: var(--color-pure-0);
///  }
///  ...
@mixin utility-colors {
  @if $enable-lite != true {
    $filter: "color";
    @each $key in map-keys($tokens) {
      @if str-index($key, $filter) != null {
        $slice: str-length($filter) + 2;
        $class-name: str-slice($key, $slice);
        $token-name: "#{$filter}-#{$class-name}";
        @include surface-color($class-name, $token-name);
        @include read-color($class-name, $token-name);
        @include border-color($class-name, $token-name);
      }
    }
  } @else {
    @each $color in $colors-lite {
      @each $luminance in $luminances {
        $class-name: "#{$color}-#{$luminance}";
        $token-name: "color-#{$color}-#{$luminance}";
        @if map-has-key($tokens, $token-name) {
          @include surface-color($class-name, $token-name);
          @include read-color($class-name, $token-name);
          @include border-color($class-name, $token-name);
        }
      }
    }
  }
}
