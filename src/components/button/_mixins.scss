@mixin button-configs {
  @include button-tokens;
  @include button-default;
  @include button-block;
  @include button-circle;
  @include button-sizes;
  @include button-emphasis;
  @include button-colors;
  @include button-states;
}

@mixin button-configs-contrast {
  @include contrast-mode;
  @include button-dark;
}


@mixin button-magicbutton {
  --focus-offset: calc(
    (var(--magic-support-size) - var(--magic-size)) * 0.5 + 4px
  );
  --button-size: var(--magic-size);
  background-color: var(--interactive-alternative);
  color: var(--color-dark);
  font-size: var(--font-size-scale-up-02);
  font-weight: var(--font-weight-semi-bold);

  &:not(:disabled) {
    @include hover("color-dark");
    @include active("color-dark");
  }
}

@mixin button-tokens {
  --button-background: transparent;
  --button-color: var(--theme-interactive-main);
  --button-xsmall: 24px;
  --button-small: 32px;
  --button-medium: 40px;
  --button-large: 48px;
  --button-size: var(--button-medium);
}

@mixin button-default {
  align-items: center;
  background-color: var(--button-background);
  border-color: var(--button-color);
  border-radius: var(--rounder-pill);
  border-style: solid;
  border-width: 0;
  color: var(--button-color);
  cursor: pointer;
  display: inline-flex;
  font-size: var(--font-size-scale-up-01);
  font-weight: var(--font-weight-semi-bold);
  height: var(--button-size);
  justify-content: center;
  overflow: hidden;
  padding: 0 var(--spacing-scale-3x);
  position: relative;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  width: auto;
}

@mixin button-block {
  &.block {
    width: 100%;
  }
  @each $breakpoint in "sm", "md", "lg", "xl" {
    @include media-breakpoint-up(#{$breakpoint}) {
      &.block-#{$breakpoint} {
        width: 100%;
      }
      &.auto-#{$breakpoint} {
        width: auto;
      }
    }
  }
}

@mixin button-circle {
  &.circle,
  &[circle],
  &.is-circle {
    border-radius: 50%;
    padding: 0;
    width: var(--button-size);
  }
}

@mixin button-sizes {
  @each $size in "xsmall", "small", "medium", "large" {
    &.#{$size},
    &[#{$size}],
    &.is-#{$size} {
      --button-size: var(--button-#{$size});
    }
  }
}

@mixin button-emphasis {
  &.primary {
    --button-background: var(--theme-interactive-main);
    --button-color: var(--theme-interactive-read-main);
    @include hover("theme-read-contrast-base");
  }

  &.secondary {
    border-width: 1px;
  }
}

@mixin button-colors {
  &.success {
    --button-background: var(--theme-success-main);
    --button-color: var(--theme-success-read-main);
    @include hover("theme-success-read-main");
  }

  &.alert {
    --button-background: var(--theme-alert-main);
    --button-color: var(--theme-alert-read-main);
    @include hover("theme-alert-read-main");
  }

  &.error {
    --button-background: var(--theme-error-main);
    --button-color: var(--theme-error-read-main);
    @include hover("theme-error-read-main");
  }
}

@mixin button-states {
  @include hover;

  &:disabled {
    cursor: not-allowed;
  }

  &:not(:disabled) {
    --focus-offset: var(--spacing-scale-half);
    @include focus;
    @include active;
  }

  &.active {
    --button-background: var(--theme-activated-main);
    --button-color: var(--theme-activated-read-main);
    @include hover("theme-read-contrast-base");
  }

  &.loading {
    &::after {
      border-color: var(--interactive) var(--interactive) transparent;
      border-style: solid;
    }

    &.primary,
    &.success,
    &.alert,
    &.error {
      &::after {
        border-color: var(--background) var(--background) transparent;
      }
    }
  }
}

@mixin button-dark {
  --button-color: var(--theme-interactive-contrast);
  @include hover("theme-interactive-contrast");

  &.primary {
    --button-background: var(--theme-interactive-contrast);
    --button-color: var(--theme-interactive-read-contrast);
    @include hover("theme-read-main-base");
  }

  &.active {
    --button-background: var(--theme-activated-contrast);
    --button-color: var(--theme-activated-read-contrast);
    @include hover("theme-activated-main");
  }
}
