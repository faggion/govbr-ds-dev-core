.#{$prefix}input {
  position: relative;
  input {
    background: v(color-secondary-01);
    border: $input-border-width solid $input-border-color;
    border-radius: $input-radius;
    display: block;
    height: $input-default;
    padding-left: $spacer * 2;
    padding-right: $spacer * 5;
    width: 100%;
    &:focus {
      background: v(status-focused-background)
      linear-gradient(
        v(status-focused-overlay),
        v(status-focused-overlay)
      );
    }
    &:invalid {
      border-color: v(color-danger);
      box-shadow: 0 0 0 1px v(color-danger);
    }
    &:disabled {
      background: v(status-disabled-background);
      border-color: v(color-secondary-04);
    }
  }
  // Input com Ã­cone
  &.has-icon {
    input {
      padding-right: 48px;
      &:disabled {
        & + .icon {
          color: v(status-disabled-text);
          cursor: not-allowed;
        }
      }
    }
    .icon {
      background: transparent;
      border: 0;
      bottom: 0;
      font-size: $input-font-size;
      height: $input-default;
      line-height: $input-default;
      margin: 0;
      min-width: 0;
      padding: 0 ($spacer * 2);
      position: absolute;
      right: 0;
      width: auto;
      img {
        max-width: 24px;
        min-width: 24px;
        transform: translate(0, -4px);
      }
    }
    button.icon {
      color: v(color-primary-default);
      &:focus,
      &:hover {
        color: v(color-primary-lighten-01);
      }
    }
  }
  // Lista de autocomplete
  .search-items {
    background: v(color-secondary-01);
    box-shadow: 0 3px 6px rgba(v(color-secondary-09), 0.22); // sass-lint:disable-line no-color-literals
    left: 0;
    margin-top: 1px;
    position: absolute;
    right: 0;
    top: 100%;
    z-index: 1;
    > * {
      cursor: pointer;
      padding: $spacer;
      &.is-active,
      &:hover {
        background-color: v(color-primary-pastel-02);
      }
    }
  }
  // Tamanhos
  @each $size, $value in (medium, $input-medium), 
  (small, $input-small) {
    &.is-#{$size} {
      input {
        height: $value;
      }
      .icon {
        height: $value;
        line-height: $value;
      }
    }
  }
  // Estados
  @each $state, $color in (valid, v(color-success)), 
  (invalid, v(color-danger))
  {
    &.is-#{$state} {
      input {
        border-color: $color;
        box-shadow: 0 0 0 1px $color;
        outline: none;
      }
    }
  }
  &.is-#{focus} {
    input {
      background: v(status-focused-background)
      linear-gradient(
        v(status-focused-overlay),
        v(status-focused-overlay)
      );
    }
  }
  &.is-#{disabled} {
    label {
      opacity: .45;
    }
    input {
      background: v(status-disabled-background);
      border-color: v(color-secondary-04);
      color: v(color-secondary-04); 
    }
  }
}