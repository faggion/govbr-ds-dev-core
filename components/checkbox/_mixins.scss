// Estilo base para checkbox e radio button
// - Como o modelo serve para os 2 tipos de input é necessário informar o tipo
// via argumento
@mixin check($type, $side: left) {
  display: inline-block;
  position: relative;
  input {
    &[type="#{$type}"] {
      @include check-label($side);
      @include check-model($type, $side);
      @include check-focus;
      @include check-checked($type, $side);
      // Remover o checkbox padrão do navegador
      opacity: 0;
      position: absolute;
      &:hover:not(:disabled) + label::before { // sass-lint:disable-line force-pseudo-nesting
        @include check-hover;
      }
      &:invalid  {
        @include check-state($color-danger);
      }
      &:disabled {
        @include check-checked($type, $side, $color-gray-5);
        & + label {
          cursor: default;
        }
      }
    }
  }
  // Estados
  &.is-hover {
    input[type="#{$type}"] + label::before { // sass-lint:disable-line force-attribute-nesting, force-pseudo-nesting
      @include check-hover;
    }
  }
  &.is-invalid {
    input {
      &[type="#{$type}"] {
        @include check-checked($type, $side, $color-danger);
        @include check-state($color-danger);
      }
    }
  }
  &.is-valid {
    input {
      &[type="#{$type}"] {
        @include check-checked($type, $side, $color-success);
        @include check-state($color-success);
      }
    }
  }
}

// Estilo do texto de label
// - A cor pode ser modificada via argumento
@mixin check-label($side, $color: $color-gray-6) {
  & + label {
    @include font-system-default-text;
    cursor: pointer;
    line-height: 1.5;
    @if ($side == left) {
      padding: 0 0 0 ($check-size + $spacing-1);
    }
    @if ($side == right) {
      padding: 0 ($check-size + $spacing-1) 0 0;
    }
    position: relative;
  }
}

// Modelo para de checkbox e radio button
// - A cor da borda pode ser modificada via argumento
// - No estado disabled a com de fundo é cinza
@mixin check-model($type, $side, $color: $color-gray-5) {
  & + label::before { // sass-lint:disable-line force-pseudo-nesting
    background: transparent;
    border: $check-border-size solid $color;
    @if ($type == radio) {
      border-radius: 50%;
    }
    @if ($type == checkbox) {
      border-radius: $check-radius;
    }
    content: "";
    height: $check-size - $check-border-size;
    @if ($side == left) {
      left: 0;
    }
    @if ($side == right) {
      right: 0;
    }
    position: absolute;
    top: 5px;
    vertical-align: text-top;
    width: $check-size - $check-border-size;
  }
  &:disabled + label::before { // sass-lint:disable-line force-pseudo-nesting
    background: $color-gray-2;
  }
}

// Estilo para focus
@mixin check-focus {
  &:focus + label {
    outline: 1px dotted currentColor;
  }
}

// O estilo hover não é aplicado para o estado desabilitado
// - A cor pode ser modificada via argumento
@mixin check-hover($color: $color-primary-lighten-15) {
  box-shadow: 0 0 0 ($check-border-size * 4) rgba($color, 0.45); // sass-lint:disable-line no-color-literals
}

// Aplica a cor para estado checked
// - A cor pode ser modificada via argumento
@mixin check-checked($type, $side, $color: $color-primary-lighten-15) {
  &:checked + label::before { // sass-lint:disable-line force-pseudo-nesting
    background: $color;
    border-color: $color;
  }
  @if ($type == checkbox) {
    &:checked + label::after { // sass-lint:disable-line force-pseudo-nesting
      border: solid $color-white;
      border-width: 0 2px 2px 0;
      content: "";
      height: 10px;
      position: absolute;
      @if ($side == left) {
        left: 7px;
      }
      @if ($side == right) {
        right: 7px;
      }
      top: 8px;
      transform: rotate(45deg);
      width: 6px;
    }
  }
  @if ($type == radio) {
    &:checked + label::after { // sass-lint:disable-line force-pseudo-nesting
      border-radius: 50%;
      box-shadow: inset 0 0 0 $check-border-size $color, inset 0 0 0 ($check-border-size + $spacing-half) $color-white;
      content: "";
      height: ($check-size - $check-border-size);
      @if ($side == left) {
        left: 0px;
      }
      @if ($side == right) {
        right: 0px;
      }
      position: absolute;
      top: 5px;
      width: ($check-size - $check-border-size);
    }
  }
}

@mixin check-state($color) {
  & + label::before { // sass-lint:disable-line force-pseudo-nesting
    border-color: $color;
    box-shadow: 0 0 0 $check-border-size $color;
  }
  &:hover:not(:disabled) + label::before { // sass-lint:disable-line force-pseudo-nesting
    @include check-hover($color);
  }
}
