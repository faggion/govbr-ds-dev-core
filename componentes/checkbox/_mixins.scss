// Estilo base para checkbox e radio button
// - Como o modelo serve para os 2 tipos de input é necessário informar o tipo
// via argumento
@mixin check($type) {
  .#{$prefix}check {
    display: inline-block;
    position: relative;
    // Remover o checkbox padrão do navegador
    input[type="#{$type}"] {
      position: absolute;
      opacity: 0;
      // Texto do label
      @include check-label;
      // Modelo do componente
      @include check-model($type);
      @include check-focus;
      @include check-checked;
      &:hover:not(:disabled) + label:before {
        @include check-hover;
      }
      &:invalid  {
        & + label:before {
          border-color: $color-danger;
          box-shadow: 0 0 0 $check-border-size $color-danger;
        }
        &:hover + label:before {
          @include check-hover($color-danger);
        }
      }
      &:disabled {
        @include check-checked($color-gray-5);
      }
    }
    // Estados
    &.is-hover {
      input[type="#{$type}"] {
        & + label:before {
          @include check-hover;
        }
      }
    }
    &.is-invalid {
      input[type="#{$type}"] {
        & + label:before {
          box-shadow: 0 0 0 $check-border-size $color-danger;
        }
        @include check-model($type, $color-danger);
        @include check-checked($color-danger);
        &:hover:not(:disabled) + label:before {
          @include check-hover($color-danger);
        }
      }
      &.is-hover {
        input[type="#{$type}"] {
          & + label:before {
            @include check-hover($color-danger);
          }
        }
      }
    }
    &.is-valid {
      input[type="#{$type}"] {
        @include check-model($type, $color-success);
        @include check-checked($color-success);
        &:hover:not(:disabled) + label:before {
          @include check-hover($color-success);
        }
      }
      &.is-hover {
        input[type="#{$type}"] {
          & + label:before {
            @include check-hover($color-success);
          }
        }
      }
    }
  }
}

// Estilo do texto de label
// - A cor pode ser modificada via argumento
@mixin check-label($color: $color-gray-6) {
  & + label {
    color: $color;
    cursor: pointer;
    font-size: $check-font-size;
    font-weight: $check-font-weight;
    padding: 0 0 0 ($check-size + $spacer);
    position: relative;
  }
}

// Modelo para de checkbox e radio button
// - A cor da borda pode ser modificada via argumento
// - No estado disabled a com de fundo é cinza
@mixin check-model($type, $color: $color-gray-5) {
  & + label:before {
    background: transparent;
    border: $check-border-size solid $color;
    @if ($type == radio) {
      border-radius: 50%;
    }
    @if ($type == checkbox) {
      border-radius: $check-radius;
    }
    content: "";
    height: $check-size - $check-border-size;
    left: 0;
    position: absolute;
    top: 0;
    vertical-align: text-top;
    width: $check-size - $check-border-size;
  }
  &:disabled + label:before {
    background: $color-gray-6;
  }
  @if ($type == checkbox) {
    &:checked + label:after {
      content: "";
      position: absolute;
      left: 7px;
      top: 3px;
      border: solid $color-white;
      border-width: 0 2px 2px 0;
      width: 6px;
      height: 10px;
      transform: rotate(45deg);
    }
  }
  @if ($type == radio) {
    &:checked + label:after {
      content: "";
      border-radius: 50%;
      box-shadow: inset 0 0 0 $check-border-size $color, inset 0 0 0 ($check-border-size + $spacer-half) $color-white;
      height: ($check-size - $check-border-size);
      left: 0px;
      position: absolute;
      top: 0px;
      width: ($check-size - $check-border-size);
    }
  }
}

// Estilo para focus
@mixin check-focus {
  &:focus + label {
    outline: 1px dotted currentColor;
  }
}

// O estilo hover não é aplicado para o estado desabilitado
// - A cor pode ser modificada via argumento
@mixin check-hover($color: $color-primary-lighten-15) {
  box-shadow: 0 0 0 ($check-border-size * 4) rgba($color, 0.45);
}

// Aplica a cor para estado checked
// - A cor pode ser modificada via argumento
@mixin check-checked($color: $color-primary-lighten-15) {
  &:checked + label:before {
    background: $color;
    border-color: $color;
  }
}
